import { createRepka } from '../src/repka/createRepka';
import { TestClosure } from '../src/DialogBuilder2';
import { RepkaSceneName } from '../src/repka/RepkaSceneName';
import { RepkaModel } from '../src/repka/RepkaModel';

let closure: TestClosure<RepkaSceneName, RepkaModel>;

async function text(command: string, intent?: string) {
    const response = await (intent ? closure.handleIntent(intent) : closure.handleCommand(command));

    return response.text;
}

async function tts(command: string, intent?: string) {
    const response = await (intent ? closure.handleIntent(intent) : closure.handleCommand(command));

    return response.tts;
}

beforeEach(() => {
    closure = new TestClosure(createRepka({ getRandom: () => 0 }));
});

test('–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∞—è —Å–∫–∞–∑–∫–∞: –Ω–∞—á–∞–ª–æ', async () => {
    expect(await text('')).toMatch(/–ø–æ—Å–∞–¥–∏–ª –¥–µ–¥ —Ä–µ–ø–∫—É/i);
});

test('–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∞—è —Å–∫–∞–∑–∫–∞: –∏—Å—Ç–æ—Ä–∏—è', async () => {
    await text('');
    await text('–ë–∞–±–∫—É');
    await text('–í–Ω—É—á–∫—É');
    await text('–ñ—É—á–∫—É');

    const tale = await text('–ö–æ—à–∫—É');

    expect(tale).toMatch('–ö–æ—à–∫–∞ üê± –∑–∞ –∂—É—á–∫—É, –∂—É—á–∫–∞ üê∂ –∑–∞ –≤–Ω—É—á–∫—É, –≤–Ω—É—á–∫–∞ üëß –∑–∞ –±–∞–±–∫—É,');
    expect(tale).toMatch(
        '–±–∞–±–∫–∞ üëµ –∑–∞ –¥–µ–¥–∫—É, –¥–µ–¥–∫–∞ üë¥ –∑–∞ —Ä–µ–ø–∫—É. –¢—è–Ω—É—Ç-–ø–æ—Ç—è–Ω—É—Ç ‚Äî –≤—ã—Ç—è–Ω—É—Ç—å –Ω–µ –º–æ–≥—É—Ç.'
    );
});

test('–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∞—è —Å–∫–∞–∑–∫–∞: –∫–æ–Ω–µ—Ü [–ø–æ–∑–≤–∞–ª–∏ –º—ã—à–∫—É]', async () => {
    await text('');
    await text('–ë–∞–±–∫—É');
    const tale = await text('–ú—ã—à–∫—É');

    expect(tale).toMatch(
        '–ú—ã—à–∫–∞ üê≠ –∑–∞ –±–∞–±–∫—É, –±–∞–±–∫–∞ üëµ –∑–∞ –¥–µ–¥–∫—É, –¥–µ–¥–∫–∞ üë¥ –∑–∞ —Ä–µ–ø–∫—É. –¢—è–Ω—É—Ç-–ø–æ—Ç—è–Ω—É—Ç üéâ –≤—ã—Ç—è–Ω—É–ª–∏ —Ä–µ–ø–∫—É!'
    );
});

test('–ú—É–∂—Å–∫–æ–π —Ä–æ–¥ –∑–æ–≤–µ—Ç –Ω–∞ –ø–æ–º–æ—â—å', async () => {
    await text('');
    expect(await text('–î—Ä–∞–∫–æ–Ω–∞')).toMatch('–ö–æ–≥–æ –ø–æ–∑–≤–∞–ª –¥—Ä–∞–∫–æ–Ω');
});

test('–ñ–µ–Ω—Å–∫–∏–π —Ä–æ–¥ –∑–æ–≤–µ—Ç –Ω–∞ –ø–æ–º–æ—â—å', async () => {
    await text('');
    expect(await text('–ë–∞–±–∫—É')).toMatch('–ö–æ–≥–æ –ø–æ–∑–≤–∞–ª–∞ –±–∞–±–∫–∞');
});

test('–°—Ä–µ–¥–Ω–∏–π —Ä–æ–¥ –∑–æ–≤–µ—Ç –Ω–∞ –ø–æ–º–æ—â—å', async () => {
    await text('');
    expect(await text('–ß—É–¥–∏—â–µ')).toMatch('–ö–æ–≥–æ –ø–æ–∑–≤–∞–ª–æ —á—É–¥–∏—â–µ');
});

test('–°–æ—Ö—Ä–∞–Ω—è–µ—Ç —Ç–æ–ª—å–∫–æ –≥–µ—Ä–æ—è –≤ —Ç–≤–æ—Ä–∏—Ç–µ–ª—å–Ω–æ–º –ø–∞–¥–µ–∂–µ', async () => {
    await text('');
    expect(await text('–ë—É—Ç—ã–ª–∫–∞ —Å—Ç–æ–ª–∞ –¥—Ä–∞–∫–æ–Ω–∞')).toMatch('–î—Ä–∞–∫–æ–Ω üêâ –∑–∞ –¥–µ–¥–∫—É');
});

test('–ü—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–µ –æ–¥—É—à–µ–≤–ª–µ–Ω–Ω—ã–º', async () => {
    await text('');
    expect(await text('–°–µ—Ä—ë–∂–∫—É')).toMatch('–ö–æ–≥–æ –ø–æ–∑–≤–∞–ª —Å–µ—Ä–µ–∂–∫–∞');
});

test('–ü—Ä–∞–≤–∏–ª—å–Ω–æ —Å–∫–ª–æ–Ω—è–µ—Ç —Ñ—Ä–∞–∑—É –ø–µ—Ä–µ—Å–ø—Ä–∞—à–∏–≤–∞–Ω–∏—è –≥–µ—Ä–æ—è', async () => {
    await text('');
    await text('–≤–Ω—É–∫–∞');
    expect(await text('—Ä–∞–∫–µ—Ç–∞')).toMatch('–ö–æ–≥–æ –ø–æ–∑–≤–∞–ª –≤–Ω—É–∫');

    await text('–ë–∞–±–∫—É');
    expect(await text('—Ä–∞–∫–µ—Ç–∞')).toMatch('–ö–æ–≥–æ –ø–æ–∑–≤–∞–ª–∞ –±–∞–±–∫–∞');

    await text('—á—É–¥–∏—â–µ');
    expect(await text('—Ä–∞–∫–µ—Ç–∞')).toMatch('–ö–æ–≥–æ –ø–æ–∑–≤–∞–ª–æ —á—É–¥–∏—â–µ');
});

test('–ü—Ä–∏–Ω–∏–º–∞–µ—Ç –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ –≤ –∏–º–µ–Ω–∏—Ç–µ–ª—å–Ω–æ–º –ø–∞–¥–µ–∂–µ', async () => {
    await text('');
    expect(await text('—á–µ–ª–æ–≤–µ–∫')).toMatch('–ß–µ–ª–æ–≤–µ–∫ –∑–∞ –¥–µ–¥–∫—É');
    expect(await text('–±–æ–≥–∞—Ç—ã—Ä—å')).toMatch('–ë–æ–≥–∞—Ç—ã—Ä—å –∑–∞ —á–µ–ª–æ–≤–µ–∫–∞');
    expect(await text('–í–Ω—É—á–æ–∫')).toMatch('–í–Ω—É—á–æ–∫ –∑–∞ –±–æ–≥–∞—Ç—ã—Ä—è');
    expect(await text('–¶–∞—Ä–∏—Ü–∞')).toMatch('–¶–∞—Ä–∏—Ü–∞ –∑–∞ –≤–Ω—É—á–∫–∞');
    expect(await text('–õ–µ–±–µ–¥—å')).toMatch('–õ–µ–±–µ–¥—å ü¶¢ –∑–∞ —Ü–∞—Ä–∏—Ü—É');
    // –õ–µ–±–µ–¥—å - —Ñ–∞–º–∏–ª–∏—è
    // expect(await text('–í—Ä–∞—á')).toMatch('–í—Ä–∞—á –∑–∞ –õ–µ–±–µ–¥—å');
});

test('–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç –≤–∏–Ω. –ø–∞–¥–µ–∂—É', async () => {
    await text('');
    expect(await text('–¢—ã—Ä—ã—à–∫–∏–Ω–∞')).toMatch('–¢—ã—Ä—ã—à–∫–∏–Ω –∑–∞ –¥–µ–¥–∫—É');
});

test('–û—Ç–±—Ä–∞—Å—ã–≤–∞–µ—Ç –Ω–µ–æ–¥—É—à–µ–≤–ª–µ–Ω–Ω–æ–µ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–π —Ñ—Ä–∞–∑–æ–π', async () => {
    await text('');
    expect(await text('–ª–æ–ø–∞—Ç—É')).toMatch(/–∑–≤–∞–ª –¥–µ–¥–∫–∞ –ª–æ–ø–∞—Ç—É.*–Ω–µ –¥–æ–∑–≤–∞–ª—Å—è/);
    expect(await text('–≤–µ–¥—Ä–æ')).toMatch(/–∑–≤–∞–ª –¥–µ–¥–∫–∞ –≤–µ–¥—Ä–æ.*–Ω–µ –¥–æ–∑–≤–∞–ª—Å—è/);
    expect(await text('—á–∞–π–Ω–∏–∫')).toMatch(/–∑–≤–∞–ª –¥–µ–¥–∫–∞ —á–∞–π–Ω–∏–∫.*–Ω–µ –¥–æ–∑–≤–∞–ª—Å—è/);
    expect(await text('–æ–∫–Ω–æ')).toMatch(/–∑–≤–∞–ª –¥–µ–¥–∫–∞ –æ–∫–Ω–æ.*–Ω–µ –¥–æ–∑–≤–∞–ª—Å—è/);
});

test('—á—Ç–æ —Ç—ã —É–º–µ–µ—à—å / –ø–æ–º–æ—â—å', async () => {
    await text('');
    expect(await text('', 'YANDEX.WHAT_CAN_YOU_DO')).toMatch('–≤–º–µ—Å—Ç–µ —Å–æ—á–∏–Ω–∏–º —Å–∫–∞–∑–∫—É');

    await text('–∫–æ—à–∫—É');
    expect(await text('', 'YANDEX.HELP')).toMatch(/–ö–æ–≥–æ –ø–æ–∑–≤–∞–ª–∞ –∫–æ—à–∫–∞?/i);
});

test('–ü–æ–≤—Ç–æ—Ä –∏—Å—Ç–æ—Ä–∏–∏: –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ', async () => {
    const agreePhrases = ['–¥–∞–≤–∞–π –µ—â–µ —Ä–∞–∑', '—Å–Ω–∞—á–∞–ª–∞', '—Å—ã–≥—Ä–∞—Ç—å', '–∏–≥—Ä–∞—Ç—å', '–µ—â—ë'];

    await text('');

    expect(await text('–º—ã—à–∫—É')).toMatch('–≤—ã—Ç—è–Ω—É–ª–∏ —Ä–µ–ø–∫—É');
    expect(await text('', 'YANDEX.CONFIRM')).toMatch('–ü–æ—Å–∞–¥–∏–ª –¥–µ–¥ —Ä–µ–ø–∫—É');

    for (let agreePhrase of agreePhrases) {
        expect(await text('–º—ã—à–∫—É')).toMatch('–≤—ã—Ç—è–Ω—É–ª–∏ —Ä–µ–ø–∫—É');
        expect(await text(agreePhrase)).toMatch('–ü–æ—Å–∞–¥–∏–ª –¥–µ–¥ —Ä–µ–ø–∫—É');
    }
});

test('–û—Ç–∫–∞–∑ –æ—Ç –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è —Å–ª–æ–≤–æ–º –ù–µ –Ω–∞–¥–æ', async () => {
    await text('');
    await text('–º—ã—à–∫—É');
    expect(await text('', 'YANDEX.REJECT')).toMatch('–∫–æ–Ω–µ—Ü');

    await text('');
    await text('–º—ã—à–∫—É');
    expect(await text('–±–æ–ª—å—à–µ –Ω–µ –Ω–∞–¥–æ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞')).toMatch('–∫–æ–Ω–µ—Ü');
});

test('–ü–æ–∑–≤–∞–ª–∏ –ª–æ—à–∞–¥—å (—Ä–µ–≥—Ä–µ—Å—Å–∏—è)', async () => {
    await text('');
    expect(await text('–ª–æ—à–∞–¥—å')).toMatch('–õ–æ—à–∞–¥—å üê¥ –∑–∞ –¥–µ–¥–∫—É');
    expect(await text('–ª–æ—à–∞–¥—å')).toMatch('–õ–æ—à–∞–¥—å üê¥ –∑–∞ –ª–æ—à–∞–¥—å');
});

test('–î–ª—è –∏–º–µ–Ω –Ω–µ–æ–ø—Ä–µ–¥. —Ä–æ–¥–∞ –≤—ã–±–∏—Ä–∞–µ—Ç—Å—è –º—É–∂—Å–∫–æ–π', async () => {
    await text('');
    expect(await text('—Å–∞—à—É')).toMatch('–ö–æ–≥–æ –ø–æ–∑–≤–∞–ª —Å–∞—à–∞');
});

test('–ü—Ä–∏–Ω–∏–º–∞–µ—Ç –∏–º—è-—Ñ–∞–º–∏–ª–∏—é', async () => {
    await text('');
    expect(await text('–∞–ª–µ–∫—Å–∞–Ω–¥—Ä–∞ –∫–∞—Ä–ø–æ–≤–∞')).toMatch(/–ê–ª–µ–∫—Å–∞–Ω–¥—Ä –ö–∞—Ä–ø–æ–≤ –∑–∞ –¥–µ–¥–∫—É,/i);
    expect(await text('–∏—Ä–∏–Ω–∞ –∫–∞—Ä–ø–æ–≤–∞')).toMatch(/–ò—Ä–∏–Ω–∞ –ö–∞—Ä–ø–æ–≤–∞ –∑–∞ –ê–ª–µ–∫—Å–∞–Ω–¥—Ä–∞ –ö–∞—Ä–ø–æ–≤–∞,/i);
    expect(await text('–≤–ª–∞–¥–∏–º–∏—Ä –ø—É—Ç–∏–Ω')).toMatch(/–í–ª–∞–¥–∏–º–∏—Ä –ü—É—Ç–∏–Ω –∑–∞ –ò—Ä–∏–Ω—É –ö–∞—Ä–ø–æ–≤—É,/i);
    expect(await tts('–≥–∞—Ä—Ä–∏ –ø–æ—Ç—Ç–µ—Ä')).toMatch(/–ì–∞—Ä—Ä–∏ –ü–æ—Ç—Ç–µ—Ä –∑–∞ –í–ª–∞–¥–∏–º–∏—Ä–∞ –ü—É—Ç–∏–Ω–∞ /i);
    expect(await text('—Ñ—ë–¥–æ—Ä –µ–º–µ–ª—å—è–Ω–µ–Ω–∫–æ')).toMatch(/–§–µ–¥–æ—Ä –ï–º–µ–ª—å—è–Ω–µ–Ω–∫–æ –∑–∞ –ì–∞—Ä—Ä–∏ –ü–æ—Ç—Ç–µ—Ä–∞,/i);
    expect(await text('–∞–ª–ª—É –ø—É–≥–∞—á—ë–≤—É')).toMatch(/–ê–ª–ª–∞ –ø—É–≥–∞—á–µ–≤–∞ –∑–∞ –§—ë–¥–æ—Ä–∞ –ï–º–µ–ª—å—è–Ω–µ–Ω–∫–æ,/i);
});

test('–ü—Ä–∏–Ω–∏–º–∞–µ—Ç –ø—Ä–∏–ª–∞–≥–∞—Ç–µ–ª—å–Ω–æ–µ-—Å—É—â–µ—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ–µ', async () => {
    await text('');
    expect(await text('–∂–µ–ª–µ–∑–Ω–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞')).toMatch('–ñ–µ–ª–µ–∑–Ω—ã–π —á–µ–ª–æ–≤–µ–∫ –∑–∞ –¥–µ–¥–∫—É');
    expect(await text('–º–∞–ª–µ–Ω—å–∫—É—é –∫–æ—à–µ—á–∫—É')).toMatch('–ú–∞–ª–µ–Ω—å–∫–∞—è –∫–æ—à–µ—á–∫–∞ üê± –∑–∞ –∂–µ–ª–µ–∑–Ω–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞,');
    expect(await text('—á–µ—Ä–Ω—É—é –∫–æ—à–∫—É')).toMatch('–ß—ë—Ä–Ω–∞—è –∫–æ—à–∫–∞ üê± –∑–∞ –º–∞–ª–µ–Ω—å–∫—É—é –∫–æ—à–µ—á–∫—É,');
    expect(await text('–ª–µ—Ç–Ω–∏–π –∑–∞–π—á–∏–∫')).toMatch('–õ–µ—Ç–Ω–∏–π –∑–∞–π—á–∏–∫ üê∞ –∑–∞ —á—ë—Ä–Ω—É—é –∫–æ—à–∫—É,');
    expect(await text('–ª–µ—Ç–Ω—é—é –ø—á–µ–ª–∫—É')).toMatch('–õ–µ—Ç–Ω—è—è –ø—á–µ–ª–∫–∞ üêù –∑–∞ –ª–µ—Ç–Ω–µ–≥–æ –∑–∞–π—á–∏–∫–∞,');
    expect(await text('–∑–≤–µ—Ä—è')).toMatch('–ó–≤–µ—Ä—å –∑–∞ –ª–µ—Ç–Ω—é—é –ø—á—ë–ª–∫—É,');
});

test('–õ—é–±–æ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ –≤–∏–Ω. –ø–∞–¥–µ–∂–∞ –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ—Ç –ò–º–µ–Ω–∏-–§–∞–º–∏–ª–∏–∏ –∏–º. –ø–∞–¥–µ–∂–∞', async () => {
    await tts('');
    expect(await tts('–ø–æ–∑–≤–∞–ª –í–∞—Å—è –ü—É–ø–∫–∏–Ω –∫–æ—Ç–∏–∫–∞')).toMatch(/–∫–æ—Ç–∏–∫ –∑–∞ –¥–µ–¥–∫—É/i);
});

test('–†–∞—Å–ø–æ–∑–Ω–∞–µ—Ç –ò–º—è-–§–∞–º–∏–ª–∏—è –∫–æ–≥–¥–∞ –∏–º—è –Ω–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–≥–æ –ø–æ–ª–∞', async () => {
    await text('');
    expect(await text('–°–∞—à–∞ –ö–∞—Ä–ø–æ–≤')).toMatch(/–°–∞—à–∞ –ö–∞—Ä–ø–æ–≤ –∑–∞ –¥–µ–¥–∫—É/i);
});

test('–û—á–µ–Ω—å –∫–æ—Ä–æ—Ç–∫–∏–µ —Å–ª–æ–≤–∞ –≤ –≤–∏–Ω. –ø–∞–¥–µ–∂–µ.', async () => {
    await text('');
    expect(await text('–ø—Å–∞')).toMatch('–ü–µ—Å –∑–∞ –¥–µ–¥–∫—É');
    expect(await text('–ª—å–≤–∞')).toMatch('–õ–µ–≤ ü¶Å –∑–∞ –ø—Å–∞');
    expect(await text('–∫–æ—Ç–∏–∫–∞')).toMatch('–ö–æ—Ç–∏–∫ üê± –∑–∞ –ª—å–≤–∞');

    expect(await text('–ø–µ—Å')).toMatch('–ü–µ—Å –∑–∞ –∫–æ—Ç–∏–∫–∞');
    expect(await text('–ª–µ–≤')).toMatch('–õ–µ–≤ ü¶Å –∑–∞ –ø—Å–∞');
    expect(await text('–∫–æ—Ç–∏–∫')).toMatch('–ö–æ—Ç–∏–∫ üê± –∑–∞ –ª—å–≤–∞');
});

test('–ü–æ–≤—Ç–æ—Ä –∏—Å—Ç–æ—Ä–∏–∏: –æ—Ç–∫–∞–∑', async () => {
    await text('');

    expect(await text('–º—ã—à–∫—É')).toMatch('–≤—ã—Ç—è–Ω—É–ª–∏ —Ä–µ–ø–∫—É');
    const { end_session, text: text_ } = await closure.handleCommand('–Ω–µ—Ç —Å–ø–∞—Å–∏–±–æ');

    expect(text_).toMatch('–∫–æ–Ω–µ—Ü');
    expect(end_session).toEqual(true);
});

test('–ü–æ–∑–≤–∞–ª–∏ –±—É—Ä–∞—Ç–∏–Ω–æ, –ø–∏–Ω–æ–∫–∫–∏–æ', async () => {
    await text('');
    expect(await text('–±—É—Ä–∞—Ç–∏–Ω–æ')).toMatch('–ë—É—Ä–∞—Ç–∏–Ω–æ –∑–∞ –¥–µ–¥–∫—É');
    expect(await text('–ø–∏–Ω–æ–∫–∫–∏–æ')).toMatch('–ü–∏–Ω–æ–∫–∫–∏–æ –∑–∞ –±—É—Ä–∞—Ç–∏–Ω–æ,');
    expect(await text('–∫–æ—Ç–∏–∫')).toMatch('–ö–æ—Ç–∏–∫ üê± –∑–∞ –ø–∏–Ω–æ–∫–∫–∏–æ,');
});

test('–†–∞—Å–ø–æ–∑–Ω–∞–µ—Ç –º–Ω–æ–∂. —á–∏—Å–ª–æ –∫–∞–∫ –µ–¥.', async () => {
    await text('');
    expect(await text('–∫–æ—à–µ–∫')).toMatch('–ö–æ—à–∫–∞ üê± –∑–∞ –¥–µ–¥–∫—É');
    expect(await text('–∫–æ—Ç—è—Ç–∞')).toMatch('–ö–æ—Ç–µ–Ω–æ–∫ üê± –∑–∞ –∫–æ—à–∫—É');
});

test('–ü–æ–∑–≤–∞–ª–∏ –æ—Å–ª–∞', async () => {
    await text('');
    expect(await text('–æ—Å–ª–∞')).toMatch('–û—Å–µ–ª –∑–∞ –¥–µ–¥–∫—É');
    expect(await text('–∫–æ—Ç–∏–∫–∞')).toMatch('–ö–æ—Ç–∏–∫ üê± –∑–∞ –æ—Å–ª–∞,');
});

test('–ü–æ–∑–≤–∞–ª–∏ –≥–æ–Ω—Ü–∞', async () => {
    await text('');
    expect(await text('–≥–æ–Ω—Ü–∞')).toMatch('–ì–æ–Ω–µ—Ü –∑–∞ –¥–µ–¥–∫—É');
    expect(await text('–∫–æ—Ç–∏–∫–∞')).toMatch('–ö–æ—Ç–∏–∫ üê± –∑–∞ –≥–æ–Ω—Ü–∞,');
});

test('–ß—ë—Ä–Ω—ã–π –≤–æ—Ä–æ–Ω –Ω–µ –∑–∞–º–µ–Ω—è–µ—Ç—Å—è –Ω–∞ –≤–æ—Ä–æ–Ω—É', async () => {
    await text('');
    expect(await tts('—á—ë—Ä–Ω–æ–≥–æ –≤–æ—Ä–æ–Ω–∞')).toMatch(/—á–µ—Ä–Ω—ã–π –≤–æ—Ä–æ–Ω.*—á–µ—Ä–Ω—ã–π –≤–æ—Ä–æ–Ω –∑–∞/i);
    expect(await tts('—á—ë—Ä–Ω—ã–π –≤–æ—Ä–æ–Ω')).toMatch(/—á–µ—Ä–Ω—ã–π –≤–æ—Ä–æ–Ω.*—á–µ—Ä–Ω—ã–π –≤–æ—Ä–æ–Ω –∑–∞/i);
});

test('–ù–µ —Å–∫–ª–æ–Ω—è–µ—Ç –Ω–µ–æ–¥. —Å—É—â–Ω–æ—Å—Ç–∏', async () => {
    await text('');
    expect(await tts('–∑–∞–º–æ–∫')).toMatch(/–∑–≤–∞–ª –¥–µ–¥–∫–∞ –∑–∞–º–æ–∫/i);
});

test('–ü—Ä–∞–≤–∏–ª—å–Ω–æ —Å–∫–ª–æ–Ω—è–µ—Ç –º–∏–ª—ã—Ö –∫–æ–Ω–µ–π', async () => {
    await text('');
    expect(await text('–º–∏–ª—ã–µ –∫–æ–Ω–∏')).toMatch(/–º–∏–ª—ã–π –∫–æ–Ω—å üê¥ –∑–∞ –¥–µ–¥–∫—É/i);
    expect(await text('–º–∏–ª—ã–µ –∫–æ–Ω–∏')).toMatch(/–º–∏–ª—ã–π –∫–æ–Ω—å üê¥ –∑–∞ –º–∏–ª–æ–≥–æ –∫–æ–Ω—è/i);
});

test('–í –∫–æ–Ω—Ü–µ –∫–æ–Ω—Ü–æ–≤ —Ä–∞—Å–ø–æ–∑–¥–∞–≤–∞—Ç—å —Å—É—â. –≤ –ª—é–±–æ–º –ø–∞–¥–µ–∂–µ', async () => {
    await text('');
    expect(await tts('–º–∞–ª—å—á–∏–∫—É')).toMatch(/–º–∞–ª—å—á–∏–∫ –∑–∞ –¥–µ–¥–∫—É/i);
});

test('–ß–µ—Ä–Ω–∏–ª–∞ - –Ω–µ–æ–¥—É—â–µ–≤–ª–µ–Ω–Ω–∞—è —Å—É—â–Ω–æ—Å—Ç—å', async () => {
    await text('');
    expect(await tts('—á–µ—Ä–Ω–∏–ª–∞')).toMatch(/–∑–≤–∞–ª –¥–µ–¥–∫–∞ —á–µ—Ä–Ω–∏–ª–∞/i);
});

test('–†–∞—Å–ø–æ–∑–Ω–∞–µ—Ç –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ –∏–∑ –¥–≤—É–∫ —Å—É—â–µ—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã—Ö', async () => {
    await text('');
    expect(await text('–±–∞–±—É —è–≥—É')).toMatch(/–±–∞–±–∞ —è–≥–∞ üßô‚Äç –∑–∞ –¥–µ–¥–∫—É/i);
    expect(await text('–¥–µ–¥–∞ –º–æ—Ä–æ–∑–∞')).toMatch(/–¥–µ–¥ –º–æ—Ä–æ–∑ üéÖ –∑–∞ –±–∞–±—É —è–≥—É/i);
    expect(await text('—á–µ–ª–æ–≤–µ–∫–∞ –ø–∞—É–∫–∞')).toMatch(/—á–µ–ª–æ–≤–µ–∫ –ø–∞—É–∫ –∑–∞ –¥–µ–¥–∞ –º–æ—Ä–æ–∑–∞/i);
    expect(await text('–∫–∞–ø–∏—Ç–∞–Ω –∞–º–µ—Ä–∏–∫–∞')).toMatch(/–∫–∞–ø–∏—Ç–∞–Ω –∞–º–µ—Ä–∏–∫–∞ –∑–∞ —á–µ–ª–æ–≤–µ–∫–∞ –ø–∞—É–∫–∞/i);

    expect(await text('–¥–µ–¥ –±–∞–±—É')).toMatch(/–±–∞–±–∞ üëµ –∑–∞ –∫–∞–ø–∏—Ç–∞–Ω–∞ –∞–º–µ—Ä–∏–∫—É/i);
    expect(await text('–±–∞–±–∞ –¥–µ–¥–∞ –¥—É–¥–∫–∞')).toMatch(/–¥–µ–¥ üë¥ –∑–∞ –±–∞–±—É/i);
    expect(await text('—Ö–æ–ª–æ–¥ —Å—Ç—É–ª')).toMatch(/–¥–æ–ª–≥–æ –∑–≤–∞–ª –¥–µ–¥ —Ö–æ–ª–æ–¥/i);
});

test('–ù–µ –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –¥–≤–∞ —Å—É—â–µ—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–∑ —Ä–∞–∑–Ω–æ–≥–æ –ø–æ–ª–∞', async () => {
    await text('');
    expect(await text('–°–æ–±–∞–∫–∞ –∫—Ä–∞—Å–Ω—ã–π')).toMatch(/—Å–æ–±–∞–∫–∞ üê∂ –∑–∞ –¥–µ–¥–∫—É/i);
});

test('–û—Ç–±—Ä–∞—Å—ã–≤–∞–µ—Ç –°', async () => {
    await text('');
    expect(await text('–î—É—Ä–∞—á–∫–∞ —Å –ø–µ—Ä–µ—É–ª–æ—á–∫–∞')).toMatch(/–¥—É—Ä–∞—á–æ–∫ –∑–∞ –¥–µ–¥–∫—É/i);
});

test('–û—Ç–±—Ä–∞—Å—ã–≤–∞–µ—Ç –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–µ –æ–¥–Ω–æ–≥–æ —Å–ª–æ–≤–∞ (—Ç–∞–∫–æ–µ —Å–ª—É—á–∞–π–Ω–æ –±—ã–≤–∞–µ—Ç)', async () => {
    await text('');
    expect(await text('–ß–µ–±—É—Ä–∞—à–∫—É —á–µ–±—É—Ä–∞—à–∫—É')).toMatch(/^–Ø —á–µ–±—É—Ä–∞—à–∫–∞\./i);
});

test('–†–∞—Å–ø–æ–∑–Ω–∞–Ω–∏–µ –æ—Ç–≤–µ—Ç–æ–≤ –î–∞ –∏ –ù–µ—Ç –Ω–µ —á—É—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –∫ —Ä–µ–≥–∏—Å—Ç—Ä—É', async () => {
    await text('');
    await text('–ú—ã—à–∫—É');
    expect(await text('–ó–∞–Ω–æ–≤–æ')).toMatch(/–ø–æ—Å–∞–¥–∏–ª –¥–µ–¥ —Ä–µ–ø–∫—É/i);
});

test('–ü—Ä–∏–Ω–∏–º–∞–µ—Ç –ó–∞ –∑–∞–π—Ü–µ–º (—Ä–µ–≥—Ä–µ—Å—Å–∏—è)', async () => {
    await text('');
    expect(await tts('–∑–∞ –∑–∞–π—Ü–µ–º')).toMatch(/–∑–∞—è—Ü –∑–∞ –¥–µ–¥–∫—É/i);
});

// test('–ò—Å—Ç–æ—Ä–∏—è –∑–∞–∫–∞–Ω—á–∏–≤–∞–µ—Ç—Å—è –∫–æ–≥–¥–∞ —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è –æ—á–µ–Ω—å –¥–ª–∏–Ω–Ω–æ–π', async () => {
//     const closure = new DialogTestClosure(repka);

//     let tale = (await tts('')) || '';

//     while (tale.length < 1024 && !/–≤—ã—Ç—è–Ω—É–ª–∏ —Ä–µ–ø–∫—É/i.test(tale)) {
//         const closure = new DialogTestClosure(repka);

//         tale = (await tts('–º–∞–ª–µ–Ω—å–∫–æ–≥–æ –∫–æ–Ω–µ–Ω–∫–∞')) || '';
//     }

//     expect(tale).toMatch(/–≤—ã—Ç—è–Ω—É–ª–∏ —Ä–µ–ø–∫—É/i);
// });

test('–ò–≥–Ω–æ—Ä–∏—Ä—É–µ—Ç —ç–º–æ–¥–∂–∏ –≤ –∫–æ–º–∞–Ω–¥–µ', async () => {
    await tts('');
    expect(await tts('üê∫ –°–µ—Ä–æ–≥–æ –≤–æ–ª–∫–∞')).toMatch(/—Å–µ—Ä—ã–π –≤–æ–ª–∫/i);
});

test('–ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç –∏–∑–≤–µ—Å—Ç–Ω—ã–µ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è —Ä–µ—á–∏', async () => {
    await text('');
    expect(await text('–ø–æ–∑–≤–∞–ª —Å—É—á–∫—É')).toMatch(/–∂—É—á–∫–∞ üê∂ –∑–∞ –¥–µ–¥–∫—É/i);
    expect(await text('–ø–æ–∑–≤–∞–ª –±–∞–∫—É')).toMatch(/–±–∞–±–∫–∞ üëµ –∑–∞ –∂—É—á–∫—É/i);
    expect(await text('–ø–æ–∑–≤–∞–ª –∂—É—á–∫–∞')).toMatch(/–∂—É—á–∫–∞ üê∂ –∑–∞ –±–∞–±–∫—É/i);
    expect(await text('–ø–æ–∑–≤–∞–ª —Ä—É—á–∫—É')).toMatch(/–∂—É—á–∫–∞ üê∂ –∑–∞ –∂—É—á–∫—É/i);
    expect(await text('–ø–æ–∑–≤–∞–ª –Ω–æ—á–∫—É')).toMatch(/–¥–æ—á–∫–∞ üßí –∑–∞ –∂—É—á–∫—É/i);
});

test('–ù–µ —Ä–∞—Å–ø–æ–∑–Ω–∞—ë—Ç —Å–ª–æ–≤–æ ¬´–Ω–µ—Ç¬ª –∫–∞–∫ —á–∞—Å—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–∂–∞', async () => {
    await tts('');
    expect(await tts('–ö–æ—Ç–∏–∫ –Ω–µ—Ç')).toMatch(/–∫–æ—Ç–∏–∫ –∑–∞ –¥–µ–¥–∫—É/i);
});

test('–ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç tts –¥–ª—è –∂—É—á–∫–∏', async () => {
    await tts('');
    expect(await tts('–ñ—É—á–∫–∞')).toMatch(/–∂\+—É—á–∫–∞/i);
});

test('–†–∞—Å–ø–æ–∑–Ω–∞—ë—Ç ¬´–æ–≥—Ä–æ–º–Ω—É—é –ø—Ä–µ–æ–≥—Ä–æ–º–Ω—É—é —Å–∏–ª—å–Ω—ã–µ —Å–æ–≤—É¬ª', async () => {
    await tts('');
    expect(await tts('–ø–æ–∑–≤–∞–ª –æ–≥—Ä–æ–º–Ω—É—é –ø—Ä–µ–æ–≥—Ä–æ–º–Ω—É—é —Å–∏–ª—å–Ω—ã–µ —Å–æ–≤—É')).toMatch(/—Å–∏–ª—å–Ω–∞—è —Å–æ–≤–∞/i);
});

test('–†–∞—Å–ø–æ–∑–Ω–∞—ë—Ç –Ω–µ—Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–Ω—ã–µ –ø—Ä–∏–ª. –∏ —Å—É—â.', async () => {
    await tts('');
    await tts('–º–∞–ª–µ–Ω—å–∫–∏–π –≥–æ—Ä–¥—ã–π –ø—Ç–∏—Ü–∞');

    expect(await tts('–º–∞–ª–µ–Ω—å–∫–∏–π –≥–æ—Ä–¥—ã–π –ø—Ç–∏—Ü–∞')).toMatch(
        /–º–∞–ª–µ–Ω—å–∫–∞—è –≥–æ—Ä–¥–∞—è –ø—Ç–∏—Ü–∞ –∑–∞ –º–∞–ª–µ–Ω—å–∫—É—é –≥–æ—Ä–¥—É—é –ø—Ç–∏—Ü—É /i
    );
});

test('–ù–µ —Ä–∞—Å–ø–æ–∑–Ω–∞—ë—Ç ¬´–ø—Ä–∏—à–ª–∞¬ª –∫–∞–∫ –ø—Ä–∏—à–ª–∞—è', async () => {
    await text('');

    expect(await text('–ø—Ä–∏—à–ª–∞ –±–∞–±—É—à–∫–∞')).toMatch(/^—è –±–∞–±—É—à–∫–∞/i);
});

test('–†–∞—Å–ø–æ–∑–Ω–∞—ë—Ç –∫–æ—â–µ—è –±–µ—Å—Å–º–µ—Ä—Ç–Ω–æ–≥–æ', async () => {
    await text('');

    expect(await text('–∫–æ—â–µ—è –±–µ—Å—Å–º–µ—Ä—Ç–Ω–æ–≥–æ')).toMatch(/^—è –∫–æ—â–µ–π –±–µ—Å—Å–º–µ—Ä—Ç–Ω—ã–π/i);
    expect(await text('–∫–æ—â–µ–π –±–µ—Å—Å–º–µ—Ä—Ç–Ω—ã–π')).toMatch(/^—è –∫–æ—â–µ–π –±–µ—Å—Å–º–µ—Ä—Ç–Ω—ã–π/i);
});

test('–†–∞—Å–ø–æ–∑–Ω–∞—ë—Ç ¬´–¥–µ—Ç–∫–∞¬ª –∫–∞–∫ ¬´–¥–µ–¥–∫–∞¬ª, –∞ –Ω–µ  ¬´–¥–µ–¥–æ–∫¬ª', async () => {
    await text('');

    expect(await text('–¥–µ—Ç–∫–∞')).toMatch(/–¥–µ–¥–∫–∞ üë¥ –∑–∞ –¥–µ–¥–∫—É/i);
});

test('–ò–∑–≤–µ—Å—Ç–Ω—ã–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–∏ —Å–∫–ª–æ–Ω—è—é—Ç—Å—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ', async () => {
    await text('');

    expect(await tts('üê∫ –°–µ—Ä–æ–≥–æ –≤–æ–ª–∫–∞')).toMatch(/–°–µ—Ä—ã–π –≤–æ–ª–∫ –∑–∞ –¥–µ–¥–∫—É/i);
    expect(await tts('üê¶ –í–æ—Ä–æ–Ω—É')).toMatch(/–í–æ—Ä–æ–Ω–∞ –∑–∞ —Å–µ—Ä–æ–≥–æ –≤–æ–ª–∫–∞/i);
    expect(await tts('üê± –ú–∞–ª–µ–Ω—å–∫–æ–≥–æ –∫–æ—Ç—ë–Ω–∫–∞')).toMatch(/–ú–∞–ª–µ–Ω—å–∫–∏–π –∫–æ—Ç–µ–Ω–æ–∫ –∑–∞ –≤–æ—Ä–æ–Ω—É/i);
    expect(await tts('üê∂ –°–æ–±–∞–∫—É')).toMatch(/–°–æ–±–∞–∫–∞ –∑–∞ –º–∞–ª–µ–Ω—å–∫–æ–≥–æ –∫–æ—Ç—ë–Ω–∫–∞/i);
    expect(await tts('üëµ –ë–∞–±—É—à–∫—É')).toMatch(/–ë–∞–±—É—à–∫–∞ –∑–∞ —Å–æ–±–∞–∫—É/i);
    expect(await tts('ü¶Å –ë–æ–ª—å—à–æ–≥–æ –ª—å–≤–∞')).toMatch(/–ë–æ–ª—å—à–æ–π –ª–µ–≤ –∑–∞ –±–∞–±—É—à–∫—É/i);
    expect(await tts('üêò –°–ª–æ–Ω–∞')).toMatch(/–°–ª–æ–Ω –∑–∞ –±–æ–ª—å—à–æ–≥–æ –ª—å–≤–∞/i);
    expect(await tts('üêì –ü–µ—Ç—É—à–∫–∞')).toMatch(/–ü–µ—Ç—É—à–æ–∫ –∑–∞ —Å–ª–æ–Ω–∞/i);
    expect(await tts('ü¶â –°–æ–≤—É')).toMatch(/–°–æ–≤–∞ –∑–∞ –ø–µ—Ç—É—à–∫–∞/i);
    expect(await tts('üêî –ö—É—Ä–æ—á–∫—É')).toMatch(/–ö—É—Ä–æ—á–∫–∞ –∑–∞ —Å–æ–≤—É/i);
    expect(await tts('üêª –ë—É—Ä–æ–≥–æ –º–∏—à–∫—É')).toMatch(/–ë—É—Ä—ã–π –º–∏—à–∫–∞ –∑–∞ –∫—É—Ä–æ—á–∫—É/i);
    expect(await tts('ü¶ä –õ–∏—Å–∏—á–∫—É')).toMatch(/–õ–∏—Å–∏—á–∫–∞ –∑–∞ –±—É—Ä–æ–≥–æ –º–∏—à–∫—É/i);
    expect(await tts('üê† –ó–æ–ª–æ—Ç—É—é —Ä—ã–±–∫—É')).toMatch(/–ó–æ–ª–æ—Ç–∞—è —Ä—ã–±–∫–∞ –∑–∞ –ª–∏—Å–∏—á–∫—É/i);
    expect(await tts('üëß –í–Ω—É—á–∫—É')).toMatch(/–í–Ω—É—á–∫–∞ –∑–∞ –∑–æ–ª–æ—Ç—É—é —Ä—ã–±–∫—É/i);
    expect(await tts('üëß –í–Ω—É—á–∫–∞')).toMatch(/–í–Ω—É—á–∫–∞ –∑–∞ –≤–Ω—É—á–∫—É/i);
    expect(await tts('üßü‚Äç –ó–æ–º–±–∏')).toMatch(/–ó–æ–º–±–∏ –∑–∞ –≤–Ω—É—á–∫—É/i);
    expect(await tts('üë¥ –î–µ–¥—É—à–∫—É')).toMatch(/–î–µ–¥—É—à–∫–∞ –∑–∞ –∑–æ–º–±–∏/i);
    expect(await tts('üì± –ê–ª–∏—Å—É')).toMatch(/–ê–ª–∏—Å–∞ –∑–∞ –¥–µ–¥—É—à–∫—É/i);
    expect(await tts('üßô‚Äç‚ôÇÔ∏è –ì–∞—Ä—Ä–∏ –ü–æ—Ç—Ç–µ—Ä')).toMatch(/–ì–∞—Ä—Ä–∏ –ø–æ—Ç—Ç–µ—Ä –∑–∞ –∞–ª–∏—Å—É/i);
    expect(await tts('üê≠ –ú—ã—à–∫—É')).toMatch(/–ú—ã—à–∫–∞ –∑–∞ –≥–∞—Ä—Ä–∏ –ø–æ—Ç—Ç–µ—Ä–∞/i);
});

test('–ü–µ—Ä—Å–æ–Ω–∞–∂–∏ —Å –æ–∑–≤—É—á–∫–æ–π 1', async () => {
    await text('');

    // prettier-ignore
    for (const char of [
        '–≤–Ω—É—á–∫–∞','—Å–ª–æ–Ω', '—Å–æ–±–∞–∫–∞', '–≤–æ—Ä–æ–Ω–∞', '—Å–æ–≤–∞', '–∫—É—Ä–æ—á–∫–∞', '–ª–∏—Å–∏—á–∫–∞', '–≤–æ–ª–∫', '–ø–µ—Ç—É—à–æ–∫',
        '–∫–æ—Ç–∏–∫', '–º–∏—à–∫–∞', '–∫–æ—à–∫–∞', '–∂—É—á–∫–∞', '–∫–æ—Ç', '–¥–µ–¥',  '–º–µ–¥–≤–µ–¥—å', '—Å–æ–±–∞—á–∫–∞', '–ø–µ—Ç—É—Ö',
        '–ª–µ–≤', '–∫–æ—Ç–µ–Ω–æ–∫', '–¥–æ—á–∫–∞', '–∫—É—Ä–∏—Ü–∞', '–∫—Ä—ã—Å–∞', '–∫–æ—Ä–æ–≤–∞', '–∫—Ä–æ–∫–æ–¥–∏–ª', '—Ç–∏–≥—Ä',
    ]) {
        expect(await tts(char)).toMatch(/<speaker audio/i);
    }
});

test('–ü–µ—Ä—Å–æ–Ω–∞–∂–∏ —Å –æ–∑–≤—É—á–∫–æ–π 2', async () => {
    await text('');

    // prettier-ignore
    for (const char of [
        '–¥–µ–¥—É—à–∫–∞', '–¥–∏–Ω–æ–∑–∞–≤—Ä',/* '–∑–∞—è—Ü', '–ª–∏—Å–∞', '–µ–¥–∏–Ω–æ—Ä–æ–≥', '–º–∞—à–∞', '–º—É—Ä–∞–≤–µ–π', '–±—Ä–∞—Ç', '–¥—Ä–∞–∫–æ–Ω', '–∫–æ–ª–æ–±–æ–∫', '–ø–æ–ø—É–≥–∞–π',*/
        // '–±–∞–±–∞', '–ø–∞–ø–∞', '–º–∞–º–∞','–∞–ª–∏—Å–∞', '–±–∞–±–∫–∞', '–±–∞–±—É—à–∫–∞', '–ø–∞–ø–∫–∞', '—Ä—ã–±–∞', '–∑–æ–º–±–∏', '–¥–µ–≤–æ—á–∫–∞', '–∫–∞–∫', '–∂–∏—Ä–∞—Ñ', '—É', '–æ', '–≤–Ω—É–∫', '—á–µ–ª–æ–≤–µ–∫', '–Ω–µ', '–ø—Ä–æ—Å—Ç–∏—Ç—É—Ç–∫–∞', '–∫–æ—Ç–∏–∫', '—Å–æ—Å–µ–¥', '–ª—è–≥—É—à–∫–∞', '–±–æ–º–∂', '–±–µ–≥–µ–º–æ—Ç', '–±–∞–±–∞', '–±–∞–±–æ—á–∫–∞',
        // '–º—É–∑—ã–∫–∞', '—á—Ç–æ', '–º—É—Ö–∞', '–ª–æ—à–∞–¥—å', '—à', '–æ–±–µ–∑—å—è–Ω–∞', '–¥–µ–¥–æ–∫', '—Å–µ—Å—Ç—Ä–∞', '–∞–∫—É–ª–∞', '–º–∞—à–∏–Ω–∞', '—Å–≤–∏–Ω—å—è', '—Å–∞—à–∞', '–≤–∫', '—Å—ã–Ω', '–ø–∏—Å—é–Ω', '–∫—Ç–æ', '—Ç–∞—Ä–∞–∫–∞–Ω', '—Ö–∞–ª–∫–∞', '—Ü—ã–ø–ª–µ–Ω–æ–∫',
        // '–∂–µ–Ω–∞', '–∫–∏—Ç', '—Ö–æ—Ç–µ—Ç—å', '–ø—Ç–∏—á–∫–∞', '—á–µ—Ä–µ–ø–∞—Ö–∞', '–µ', '–Ω–∞—Å—Ç—è', '–∑–º–µ—è', '–±', '–∑–∞–Ω–æ–≤–æ', '–∫–æ—à–µ—á–∫–∞', '–≤', '–¥—É—Ä–∞', '–≤—Å–µ', '–ª—É–Ω—Ç–∏–∫', 'youtube', '–∫–∞—Ç—è', '—á–µ–ª–æ–≤–µ–∫', '–≤–∏–∫–∞', '—á–µ—Ä–≤—è–∫',
        // '–µ–∂–∏–∫', '—Ç–µ–ª–µ—Ñ–æ–Ω', '–º—É—Ä–∫–∞', '—Ö–æ–º—è–∫', '–¥–∞—à–∞', '—Å–µ–∫—Å', '–∫–æ–∑–µ–ª', '–º—ã—à–æ–Ω–æ–∫', '–∂—É–∫', '–Ω–æ—á–∫–∞', '—Å–æ—Å–µ–¥–∫–∞', '–≤', '–¥–µ–¥', '–¥—É—Ä–∞–∫', '—Å–æ–Ω—è', '—á–ª–µ–Ω', '—Ç–µ–ª–µ–≤–∏–∑–æ—Ä', '–∞–ª–µ', '–ø–∞—É–∫', '–∫–æ–∑–∞',
        // '–¥—Ä—É–≥', '—Å–∏—Å—å–∫–∞', '–∑–∞–π—á–∏–∫', '–±—ã–∫', '—Ä–æ–±–æ—Ç', '–∫—Ä–æ–ª–∏–∫', '–ø–∏—Å—è', '–æ–π', '–∏–Ω–æ–ø–ª–∞–Ω–µ—Ç—è–Ω–∏–Ω', '–∞–Ω—è', '–¥—É—Ä–æ—á–∫–∞', '–º—É–ª—å—Ç–∏–∫', '–∫–æ–º–∞—Ä', '–±–æ–≥', '–±–∞–±—É–ª—è', '—É—Ç–∫–∞', '—Å–∫–∞–∑–∫–∞', '–ª–∞–¥–Ω–æ',
        // '–≤–∞–Ω—è', '–¥–∏–º–∞', '–ø–æ–ø–∫–∞', '—á–µ–±—É—Ä–∞—à–∫–∞', '—Å—É–∫', '—Å—Ç–æ–ø', '–º—É–∂', '—Ç—Ä–∞–º–ø', '—Å–ø–∞—Å–∏–±–æ', '–≤–Ω—É—á–∫–∞', '—Ç–∞–∫', '–º–∏—à–∞', '–ª–∏–∑–∞', '–º—ã—à–∫–∞', '–º–∞–ª—å—á–∏–∫', '–∫—É', '–¥–∞', '–∞–≥–∞', '—Ä–µ–±–µ–Ω–æ–∫', '–±–µ–ª–æ–∫',
        // '—Ö–æ—Ä–æ—à–æ', '–∞–ª–∏–Ω–∞', '–ø–∏–Ω–≥–≤–∏–Ω', '—É–Ω–∏—Ç–∞–∑', '–¥', '–µ–Ω–æ—Ç', '–≤–µ–ª–∏–∫–∞–Ω', '–≤–æ—Ä–æ–±–µ–π', '–ø–æ—á–µ–º—É', '—Ä—É—Å–∞–ª–∫–∞', '–∏–≥—Ä–∞', '–≤–æ–Ω—é—á–∫–∞', '–º–∏–∫—Ä–æ–±', '–¥–µ—Ä–µ–≤–æ', '–Ω—É', '–¥–æ–º', '—è–Ω–¥–µ–∫—Å', '–∞–ª–∫–∞—à',
        // '–≥—É—Å—å', '–≤—ã—Ç—è–≥–∏–≤–∞—Ç—å', '—Ç—É–∞–ª–µ—Ç', '–ª–µ–¥–∏', '–∫–∏—Å–∫–∞', '–≥–µ–π', '–ø–æ–ª–∏–Ω–∞', '–æ–ª–µ–Ω—å', '–ª–µ—Å', '—Å—É–ø–µ—Ä–º–µ–Ω', '–∞–Ω–¥—Ä–µ–π', '–∫—É—Ä–æ—á–∫–∞', '—Å–ª–æ–≤–æ', '—è–Ω–¥–µ–∫—Å', '–≥–∞—Ä—Ä–∏', '—Ç—Ä–∞–∫—Ç–æ—Ä', '–≤–∞—Å—è', '–Ω–∞—Ä–∫–æ–º–∞–Ω',
        // '–ø—Ç–∏—Ü–∞', '—É–ª–∏—Ç–∫–∞', '–∏–≤–∞–Ω–≥–∞–π', '–ø—Ä–µ–∑–∏–¥–µ–Ω—Ç', '–±–∞–±–∫–∞', '–≤–µ—Ä–±–ª—é–¥', '–ª–µ–æ–ø–∞—Ä–¥', '–¥–µ–ª—å—Ñ–∏–Ω', '–∫–æ–Ω–µ—Ü', '–∂–µ–ª–µ–∑–Ω—ã–π', '–ø–æ–¥—É—à–∫–∞', '–∫–∞–∫–æ–π', '–∫–∞—Ä—Ç–æ—à–∫–∞', '—Å–µ–±—è', '–º—ã—à', '—Å–æ—Å–∏—Å–∫–∞', '—Å–∏—Ä—è',
        // '–Ω–∏–∫–∏—Ç–∞', '–Ω–∞—Ç–∞—à–∞', '–∂–æ–ø–∫–∞', '–º–∞–∫—Å–∏–º', '—è–π—Ü–æ', '—Ç–µ—Ç—è', '–∫—Å—é—à–∞', '–ø–æ–≤—Ç–æ—Ä—è—Ç—å', '–º–µ–¥–≤–µ–¥–µ–≤–∞', '—Ç–∞–Ω—è', '–ø–∞–Ω–¥–∞', '–¥–µ—Ç–∫–∞', '–∫—Ä–∞—Å–Ω—ã–π', '–∫–æ–º–ø—å—é—Ç–µ—Ä', '—Å–Ω–µ–≥—É—Ä–æ—á–∫–∞', '–æ—Ä–µ–ª', '–º–∞–ª—ã—à',
        // '—Å–≤–∏–Ω–∫–∞', '—Ç–æ—á–∫–∞', '–±—É—Ä—ã–π', '–ø—É—à–∫–∏–Ω', '—é–ª—è', '–¥–µ–¥', '–¥—è–¥—è', '–µ—â–µ', '–æ—Å–µ–ª', '–±–∞–±–∫–∞', '–≥–¥–µ', '–ø–∏–ø–∏—Å—å–∫–∞', '–º–∞—à–∫–∞', '–∫—É–∫—É—à–∫–∞', '—É', '–∞—Ä—Ç–µ–º', '–∑–∞–π–∫–∞', '–≥–æ–ø–Ω–∏–∫', '–ø—Ä–∏–Ω—Ü–µ—Å—Å–∞', '—Ñ–µ—è',
        // '–¥–∞–≤–∞—Ç—å', '–∑–∞–ø—É—Å–∫–∞—Ç—å', '—Ü–≤–µ—Ç–æ–∫', '–ª–µ—Ä–∞', '–≥–æ–≤–æ—Ä–∏—Ç—å', '–Ω–æ—Å–æ—Ä–æ–≥', '—Å–∫–µ–ª–µ—Ç', '–∫–∞–±–∞–Ω', '—â–µ–Ω–æ–∫', '–ª–æ—à–∞–¥–∫–∞', '–ø–æ–∑–≤–∞—Ç—å', '–≤', '–±—É—Ä–∞—Ç–∏–Ω–æ', '—Ç–∏–º–∞—Ç–∏', '–ø–∏–∫–∞—Ç–∏—Ç—å', '–∑–µ–±—Ä–∞', '—â—É–∫–∞',
        // '—Å–Ω–∞—á–∞–ª–∞', '–ø–æ', '–∫—Ä–æ—Ç', '–≥—É—Å–µ–Ω–∏—Ü–∞', '–º–æ—á–∞', '–º–∞–º–∫–∞', '–±—ç—Ç–º–µ–Ω–∞', '–∫–æ–Ω—å', '–≥–æ–ª—É–±—å', '–º–æ–Ω—Å—Ç—Ä', '–æ–≤—Ü–∞', 'google', '–±–æ–∂–∏–π', '–±–∞—Ä–∞–Ω', '–ª—é–±–æ–≤–Ω–∏—Ü–∞', '–≤–∞–º–ø–∏—Ä', '–ø–æ—Ä–Ω–æ', '—à–∞—Ä–∏–∫',
        // '–ª–æ—Ö', '2', '–æ–ª—è', '–ø—á–µ–ª–∞', '–¥–∞', '–∂—É—á–∫–æ–≤', '–≥–æ–¥–∑–∏–ª–ª–∞', '—Å–≤–µ—Ç', '—Ç—è–Ω—É—Ç—å', '–±–ª–æ—Ö–∞', '–¥–∞–≤–∞—Ç—å', '–æ—á–∫–æ', '–∑–æ–ª—É—à–∫–∞', '–¥–µ–≤—É—à–∫–∞', '—Ç–µ—Ä–º–∏–Ω–∞—Ç–æ—Ä', '–≤–æ–¥–∫–∞', '–¥–µ–¥–∫–∞', '–∫–æ—à–∫–∞', '–æ–∫–∞',
        // '–ø–æ–Ω–∏', '—Å—É–ø–µ—Ä', '–º–æ—Ä–∫–æ–≤–∫–∞', '–æ–Ω–∞', '–∞–ª–µ–Ω–∞', '–ø–æ—Ä–æ—Å–µ–Ω–æ–∫', '–ø–∞—à–∞', '–∫—É', '–∫–æ—Ä–æ–ª—å', '–≤', '–ª–µ–Ω–∞', '–º–æ–º–æ', '—Å–æ–ª–Ω—Ü–µ', '—Å–æ–Ω', '–ø–æ–¥—Ä—É–≥–∞', '–¥–∞–≤–∞—Ç—å', '–∫–∞–∫', '—Å–æ–±–∞–∫–∞', '–∫—Ä–∏—Å—Ç–∏–Ω–∞', '–æ–≥—É—Ä–µ—Ü',
        // '–≤–æ–¥–∞', '–æ—Å—å–º–∏–Ω–æ–≥', '–Ω–∞', '—à–∫–∞—Ñ', '–∂—É—á–∫–æ', '–∫–µ–Ω–≥—É—Ä—É', '–∫—É–∑—è', '–±–∞–Ω–∞–Ω', '–∏–¥–∏–æ—Ç', '–ø–æ–ª–∏—Ü–µ–π—Å–∫–∏–π', '–≤–æ–≤–∞', '—Å–∏–ª–∞—á', '–¥–∏–∞–Ω–∞', '–ª–µ—à–∞', '—Ç—Ä—É—Å—ã', '–µ–≥–æ—Ä', '–∞—É', '–±–µ–ª—ã–π', '—Ñ–µ–π—Å',
        // '—Ä–µ–ø–∞', '—Å–ª—É—à–∞—Ç—å', '–≤–µ—Ä–æ–Ω–∏–∫–∞', '–≤–æ—Ç', '–¥–æ—á—å', '—Ä—ã—Å—å', '–ª–∏—Å–∏—Ü–∞', '–¥–µ–¥–∫–∞', '–¥–µ–Ω–∏—Å', '–Ω–æ–≥–∞', '–≤–ª–∞–¥', '—Å—Ç–∞—Ä—É—Ö–∞', '–ø–µ—Ä–¥—É–Ω', '–≤–µ—Ä–∏—Ç—å', '–≥—É–±–∫–∞', '–±—É—Ä–æ–≤–∞', '—è', '–ª—É–Ω–∞', '—Å—Ç–∞–ª–∏–Ω–∞',
        // '–µ–≤–∞', '–∂–∞–±–∞', '–∫—É–∫–ª–∞', '–æ–ª—å–≥–∞', '—Å–∫–∞–∑–∞—Ç—å', '–∞—Ä–∏–Ω–∞', '–ø—É–∫', '–∫–æ—â–µ–π', '–∫–∏—Ä–∏–ª–ª', '–∫–∞–∫–∞—Ö–∞', '–±–∞—Ä—Å–∏–∫', '–∂–µ–Ω–∏—Ç—å', '—Ç–∞–Ω–æ—Å', '–ø–æ–¥—Å–∫–∞–∑–∫–∞', '–≤–∞—Ä—è', '—ç—Ç–æ', '—Å–∞—Ç–∞–Ω–∞', '–∫–æ–∑—è–≤–∫–∞', '–µ–≥–æ—Ä',
        // '–∫–æ–ª—è', '–±–æ–±', '–ø–æ–≥–æ–¥–∞', '—Å–≤–∏–Ω–∫–∞', '–ª—É–ø–∞', '–∞–Ω–≥–µ–ª', '–ø–æ—Ä–æ—à–µ–Ω–∫–æ', '–∑–µ–ª–µ–Ω—Å–∫–∏–π', '–ø–æ–Ω–æ—Å', '–≥–∏—Ç–ª–µ—Ä', '–≤–∏–Ω–Ω–∏', '–±–∞–±—É—à–∫–∞', '—Å–∞–º–æ–ª–µ—Ç', '—Å–º–∞–π–ª–∏–∫', '–±–∞–±–∫–∏', '–∫–∞–∫–∞—à–µ—á–∫–∞', '–º–∏–ª–∞–Ω',
        // '–ª—é–±–æ–≤–Ω–∏–∫', '–ø–æ—Å—Ç–∞–≤–ª—è—Ç—å', '—Å–Ω–µ–≥–æ–≤–∏–∫', '—Å–∞–º', '—Ç—É—á–∫–∞', '–µ–ª–∫–∞', '–º–∞–π–Ω–∫—Ä–∞—Ñ—Ç', '—Ä–æ—Å—Å–∏—è', '—Ö–æ–º—è—á–æ–∫', '–Ω–∞—á–∏–Ω–∞—Ç—å', '–≥—Ä–µ–Ω–Ω–∏–π', '–ø–µ—Å', '–∫–∞—Ä–∏–Ω–∞', '–∫–æ–Ω–µ—á–Ω–æ', '–≥–æ—Ä–∏–ª–ª–∞', '—Å—Ç—Ä–∞—É—Å', '–¥–∂–∏–Ω',
        // '–ø–æ–∑–≤–∞—Ç—å', '–º–∞–º–æ—á–∫–∞', '–±–æ–ª—å—à–æ–π', '—à—É—Ç–∫–∞', '–∫–∏—Ä–∫–æ—Ä–æ–≤', '–≥–¥–µ', '—Å—É—Ç–µ–Ω–µ—Ä', '—Ä—É–∫–∞', '–∞–ª–µ–Ω–∫–∞', '–ª–µ–Ω–∏–Ω', '–º—ã—à–∫–∞', '–ø—Ä–∏–¥—É—Ä–æ–∫', '–≤–∫–ª—é—á–∞—Ç—å', '–≥–µ–ø–∞—Ä–¥', '–º', '—Å–µ—Ä–µ–∂–∞', '–≤–Ω—É—á–µ–Ω—å–∫–∞', '–¥–∞–Ω–∏–ª–∞',
        // '–∫—É–∑–Ω–µ—á–∏–∫', '—Å–æ–±–∞—á–∫–∞', '–¥–∞–Ω—è', '–±—ã—Ç—å', '–Ω–µ', '–æ–±–∞–º–∞', '–≤–Ω—É—á–∫–∞', '–¥–æ–Ω–∞–ª—å–¥', '–ª–µ—à–∏–π', '–ø–µ–ª—å–º–µ–Ω—å', '—Ç–∏—Ö–æ', '–ø–æ–∂–∞–ª—É–π—Å—Ç–∞', '–±–∞—Ä–±–∏', '–∏–Ω–¥—é–∫', '—Ñ–∏–ª–∏–ø–ø', '–ø–ª–æ—Ö–æ', '—Ç–∞–Ω–∫', '–Ω–æ—Å–æ–∫',
        // '–æ–±–µ–∑—å—è–Ω–∫–∞', '–ø—Ä–æ–¥–æ–ª–∂–∞—Ç—å', '–ø–æ–º–∏–¥–æ—Ä', '–∫–∞–∫–∞—à–∫–∞', '–º—ã', '–¥—è—Ç–µ–ª', '—Å—Ç—Ä–∏–ø—Ç–∏–∑–µ—Ä—à–∞', '–∏–≥–æ—Ä—å', '–∫–∞—à–∫–∞', '–±—É–±–∞', '–∑–º–µ–π', '–ø–µ—Ç—è', '–µ—â–µ', '—Ö–∞', '–ª–æ—Å—å', '—Ç–µ—Ç–∫–∞', '–≥–∏–ø–ø–æ–ø–æ—Ç–∞–º', '–¥–µ–º–æ–Ω',
        // '—Å—Ç—É–ª', '–≤—ã—Ç—è–≥–∏–≤–∞—Ç—å', '–∫–æ–ª–±–∞—Å–∞', '—á–∏–ø–æ–ª–ª–∏–Ω', '—É–±–∏–π—Ü–∞', '–∏–≥—Ä–∞—Ç—å', '—è—â–µ—Ä–∏—Ü–∞', '–ª–µ—Ç—É—á–∏–π', '–∏–ª—é—à–∞', '–ø–µ—Ä–¥—É—à–∫–∞', '—Ç–∞–¥–∂–∏–∫', '—á–µ—Ä–≤—è—á–æ–∫', '—ç–ª—å–∑–∞', '–º–µ–¥—É–∑–∞', '—Ç—É–ø–æ–π', '—Ç–æ—Ä', '–∫–æ–≥–¥–∞',
        // '—á–µ—Ä–µ–ø–∞—à–∫–∞', '–∞—Ä–±—É–∑', '–º–æ—á—å', '—Ö–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫', '–≥–ª–∞–∑', '–ø–æ–ª–∏—Ü–∏—è', '–ø–æ–∑–≤–∞—Ç—å', '–ø–µ—Ç—Ä—É—à–∫–∞', '–º–∞—Ä–∏–Ω–∞', '—è–±–ª–æ–∫–æ', '–º–µ–¥–≤–µ–∂–æ–Ω–æ–∫', '—ç–π', '—Å–æ–±–∞–∫–∞', '—Å—Ç–æ–ª', '–¥–∞–≤–∞—Ç—å', '—Ç–µ—â–∞', '—Ç–∏–≥—Ä–µ–Ω–æ–∫',
        // '—ç–ª–¥–∂–µ–π', '–±—É—Ç—ã–ª–∫–∞', '–ª–µ–≥–æ', '–∫–æ—à–∫–∞', '–æ—Å–∞', '–ø—Ä–∏–≤–µ–¥–µ–Ω–∏–µ', '–∫–∞–ø–∏—Ç–∞–Ω', '–±–∞–±–∫–∞', '–º–∏–∫–∫–∏', '–±–µ–ª–æ—á–∫–∞', '–≤–æ—Ä–æ–Ω', '—Ö—Ä—é—à–∫–∞', '–¥–∞–≤–∞—Ç—å', '—å', '1', '–º–∞—Å–∫–∞', '–ø—Ä–∏–Ω—Ü', '—Å–∞—à–∫–∞', '–∫–∞—Ä–∞—Å—å',
        // '–∂–∏—Ä–∏–Ω–æ–≤—Å–∫–∏–π', '—Å–∫–æ–ª—å–∫–æ', '–º—è—É', '–±–∞–∫—Ç–µ—Ä–∏—è', '–∑–æ–ª–æ—Ç–æ–π', '–∫–∞—á–∫–∞', '–±–ª–∏–Ω', '–ø–æ–¥—Ä—É–∂–∫–∞', '—Ä–æ–º', '—Å—Ç—Ä–µ–∫–æ–∑–∞', '—è–Ω–∞', '–∫—Ç–æ', '–±—É–∑–æ–≤–∞', '–æ–ª–µ–≥', '—Ä–∞–∫', '–∫–∏—Å–∞', '–º–∞–ª–µ–Ω—å–∫–∏–π', '—Å–ª–∞–π–º',
        // '–∫–æ—à–∫–∞', '—Å–∞–Ω—Å', '—à—Ä–µ–∫', '–≤–æ–ª–≥–∞', '–ø–∞–Ω—Ç–µ—Ä–∞', '–¥–µ–Ω—å–≥–∏', '–∫–ª–æ—É–Ω', '—á–µ', '—Å–≤–æ–π', '–∫–∞–ø—É—Å—Ç–∞', '—Ö–∞', '–∏—Ä–∞', '–ø—Ä–∏–∑—Ä–∞–∫', '–º–µ–Ω—Ç', '–∫–µ—à', '–µ–∂–∞', '–º–æ–ª–æ–¥–µ—Ü', '–¥–µ–≤–∫–∞', '—Å–≤–æ–π', '–º–∞–∫—Å',
        // '–¥–∏—Ä–µ–∫—Ç–æ—Ä', '–º–∞—Ä—É—Å—è', '–º–∞–º–∞', '–ª–∞–ø–∫–∞', '–º—É–∂–∏–∫', '—Ä–æ–∑–∞', '–±–æ–≥–∞—Ç—ã—Ä—å', '–∫–æ—à–∫–∞', '–±–∞–±–∫–æ', '—á–∞–π–Ω–∏–∫', '–∞–Ω–∂–µ–ª–∞', '—Ö–∞', '–±—Ä–∞—Ç–∏–∫', '–≤–ª–∞–¥–∏–∫', '—Å–ª–æ–Ω–∏–∫', '–∞–ª–∫–æ–≥–æ–ª–∏–∫', '—Å–µ–π—á–∞—Å', '–∫—Ä–æ–∫–æ–¥–∏–ª',
        // '–±–µ–∑–∑—É–±–∏–∫', '–º–∞—à–∏–Ω–∫–∞', '–æ–∫–µ–π', '—Å–∏—Å—è', '–≤–ª–∞–¥–∏–º–∏—Ä', '–ø—Ä–∏–≤–µ—Ç', '–∫—Ä–æ–≤–∞—Ç—å', '–ø–µ—Å–∏–∫', '–¥–∞–≤–∞—Ç—å', '–¥–∏–≤–∞–Ω', '–±–∞–±–∞–π', '–¥–æ–∫—Ç–æ—Ä', '–≤–∏–¥–µ–æ', '—é—Ä–∞', '–∫—Ä–æ—à–∏—Ç—å', '–∫—Ä—É—Ç–æ', '—Ä–∞–ø—É–Ω—Ü–µ–ª—å', '–∏–≤–∞–Ω',
        // '–Ω—é—à–∞', '–∑–µ–º–ª—è', '–æ–Ω', '—Ñ—Ä–µ–¥–¥–∏', '–∫—É–∫', '—Å–æ—Å–æ–∫', '–≤–∞–ª–∏—Ç—å', '–¥–∏–º–∞', '–º–∞—Ä—Ç—ã—à–∫–∞', '–∑', '–≤–∞–ª–µ—Ä', '–ª–µ—Ö–∞', '—á–∞–µ–∫', '–µ—Ö–∞—Ç—å', '—Å–æ–ª–Ω—ã—à–∫–æ', '–∫–æ–Ω—Ñ–µ—Ç–∫–∞', '–±–∞–±—É—à–∫–∞', '–Ω–∞—Ä—É—Ç–æ', '–ø–æ–∑–≤–∞—Ç—å',
        // '–∫–æ—Ç', '—É—á–∏—Ç–µ–ª—å', '—è—Ä–∏–∫', '–ª–∏–∑—É–Ω', '–º–∞–ª—ã—à–∫–∞', '–æ–ª–∏–≥–∞—Ä—Ö', '–Ω–∏–∫–∞', '—à–∫–æ–ª–∞', '–≥–∏–≥–∞–Ω—Ç', '–∫—Ä–∞–±', '–∫–∏–Ω–æ', '–º–∞–ª–µ–Ω—å–∫–∏–π', '–µ–ª–æ—á–∫–∞', '–¥–∞—É–Ω', '—Ö—Ä–µ–Ω', '–æ–≤–µ—á–∫–∞', '–ª–∏—Å–∏—á–∫–∞', '–ª–æ–ª–∞',
        // '—Å–º–µ—Ä—Ç—å', '–º—É—Å—è', '–±–∞–ª–¥–∏—Ç—å', '—ç', '–ø–æ–Ω–∏–º–∞—Ç—å', '—É–ª—å—è–Ω–∞', '—Å–µ—Ä–µ–≥–∞', '–∞–Ω—Ç–æ–Ω', '–º—ã—à–∫–∞', '–º–ª–∞–¥–µ–Ω–µ—Ü', '–ª—é–±–∞', '–±—É–∫–∞—à–∫–∞', '—é', '–∫–æ–Ω–µ—Ü', '–∞–Ω–Ω–∞', '–º–µ–Ω—å', '—Ç–µ–º–∞', '—Ñ–∏–∫—Å–∏–∫–∞', '–ø–∞—Ä–µ–Ω—å',
        // '—Ä–æ–º–∞', '–±–∞–±–∞–π–∫–∞', '–Ω–∞–≤–∞–ª—å–Ω—ã–π', '—á–∞–∫', '–≤–∞–Ω—å–∫–∞', '–±–∞–±—É—Å—è', '–≤–µ–¥—å–º–∞', '—É–≥—É', '—Ñ—É—Ç–±–æ–ª–∏—Å—Ç', '—á–µ—Ä—Ç', '–ª—É–∫–∞—à–µ–Ω–∫–æ', '—Ç–æ', '—Ç–≤–∞—Ä—å', '–∂–∞–ª–∫–æ', '–∏–¥—Ç–∏', '–µ–¥–∏–Ω–æ—Ä–æ–∂–∫–∞', '–∑–≤–∞—Ç—å', '—Å—Ç—Ä–∏–ø—Ç–∏–∑–µ—Ä',
        // '–∞', '—Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–µ—Ä', '–Ω–æ—Å', '—Å—ã–Ω–æ—á–µ–∫', '—Ä—É—Å–∞–ª–æ—á–∫–∞', '–≤–∏—Ç—è', '–æ–Ω–æ', '—É—á–∏—Ç–µ–ª—å–Ω–∏—Ü–∞', '—á–µ—Ä–µ–ø–∞—à–∫–∞', '—Å–æ–ª–¥–∞—Ç', '—Ü–≤–µ—Ç–æ—á–µ–∫', '–∞', '–∏–ª—å—è', '–Ω—É', '—á–∞—Å—ã', '–∏', '–Ω–æ—á—å', '—á–µ—Ä–≤—å', '–∞–π—Ñ–æ–Ω',
        // '–∞–ª–µ—à–∞', '–º–∞–º–æ–Ω—Ç', '–ø–∏—Ü—Ü–∞', '–º–∏–Ω—å–æ–Ω', '–Ω–∞—Ç–∞—à–∫–∞', '—Ä—É—Å–ª–∞–Ω', '–¥–≤–µ—Ä—å', '—Å–∏–Ω–∏–π', '–≤—ã—Å–æ–∫–æ', '—Å–µ—Å—Ç—Ä–µ–Ω–∫–∞', '–Ω–∏—á–µ–≥–æ', '—Å–ª–µ–Ω–¥–µ—Ä–º–µ–Ω', '–º–æ–π', '–ø–∏–≤–æ', '—Ä—ã—Ü–∞—Ä—å', '—Å–∞–Ω—è', '–º–∞—à–∞', '–º–æ—Ä–µ',
        // '–±–µ–ª–∫–∞', '–æ–¥–µ—è–ª–æ', '–∫–∏–∫–∏–º–æ—Ä–∞', '–∏–Ω—Ç–µ—Ä–Ω–µ—Ç', '–Ω–∞–¥—è', '–Ω–µ—Ç', '–∫–æ–Ω—Ñ–µ—Ç–∞', '–¥–∞—Ä—Ç', '–º–µ–¥–≤–µ–¥–µ–≤', '–∫–æ—Å—Ç—è', '3', '—Ñ—É', '–¥–∞', '–ø–µ–≥–∞—Å', '–ø–∏—Å—é–ª—å–∫–∞', '–±—ç—Ç–º–µ–Ω', '–Ω–µ–∑–Ω–∞–π–∫–∞', '—Å–ª–æ–Ω–µ–Ω–æ–∫', '–æ–∫—Å–∞–Ω–∞',
        // '–≤–µ—Ç–∫–∞', '–∑—É–±', '–ø—Ä–∞–≤–∏–ª–æ', '—Å–º–æ—Ç—Ä–µ—Ç—å', '–ø–∞–ø–∞', '–∂–µ–Ω—â–∏–Ω–∞', '–∏–≥—Ä—É—à–∫–∞', '—Ç—ã', '–¥–∞–ª–µ–∫–æ', '–ø–æ–π—Ç–∏', '–ø–µ—á–∫–∞', '–º–æ—Ä–æ–∂–µ–Ω–æ–µ', '—Å—Ç–∏–≤', '–∂–≤–∞—á–∫–∞', '–∫—É–¥–∞', '–∫–∞—Ä–∞–Ω–¥–∞—à', '–∏–ª—å—è', '—Å–∫–æ—Ä–ø–∏–æ–Ω',
        // '–∞–≤—Ç–æ–±—É—Å', '–∫', '–Ω—É', '–ª—É–∫', '–ø–µ–¥–æ—Ñ–∏–ª', '–∫–∏—Ç–∞–µ—Ü', '–∫–∞–∫–∞', '—Ä—ã–±–∫–∞', '—à–∞–ª–∞–≤–∞', '–º–∏—Ä', '–±—É–ª–æ—á–∫–∞', '–∞–Ω–≥–µ–ª–∏–Ω–∞', '–∞—Ä—Ç—É—Ä', '–±–µ–ª–æ—Å–Ω–µ–∂–∫–∞', '–±–∞–±–∫–∞', '—Ç–∏—Ç—å–∫–∞', '–Ω–∞', '–≤–µ—Ç–µ—Ä', '–±–∞–±—É–ª—å–∫–∞',
        // '–∞–ª–∏—Å–∞', '–≤–æ–ª—á–æ–Ω–æ–∫', '–ø–µ—Å–Ω—è', '–∏—Ä–∏–Ω–∞', '–º–∞—Ç–≤–µ–π', '–¥–µ–±–∏–ª–∫–∞', '–≥–æ–ª–æ–≤–∞', '–≤—ã—Ç—è–≥–∏–≤–∞—Ç—å', '—Å–∫–∞–∑–∫–∞', '—Ö–µ–ª–ª–æ—É', '–∫–∞–º–µ–Ω—å', '–ø–∞–≤–ª–∏–Ω', '—à—É—Ä–∞', '—Å–∫—É–Ω—Å', '–≤–µ—Ä–∞', '–±–∞–±–∫–∞', '—Ç–µ–ª–∫–∞', '–≤–∞–≥–∏–Ω',
        // '–±—Ä–∞—Ç–∞–Ω', '—Ç–æ–º–∞', '–≥—Ä–∏—à–∞', '–∫–æ—â–µ–π', '–º–∞–∫–∞–∫–∞', '—Å–∏–Ω–∏—á–∫–∞', '—Å—É—Å–ª–∏–∫', '–æ–ª—å–≥–∞', '–≥–æ—à–∞', '–≤—ã', '–ª–∞—Å—Ç–æ—á–∫–∞', '—Ä–∏—Ç–∞', '—Ç–∏—Ç–∞–Ω', '–±–æ–≥–¥–∞–Ω', '–≤—Ä–∞—á', '–≤', '—Å—Ç–∞—Ä—É—à–∫–∞', '–≤–æ—Ä–æ–±—É—à–µ–∫', '–Ω–µ–≥—Ä',
        // '–∞', '—Ñ–∏–ª—è', '–ª—é–±–æ–≤—å', '–¥—å—è–≤–æ–ª', '–ª–∞–π–∫', '–ª–∞–º–ø–æ—á–∫–∞', '–º—É–º–∏—è', '–ª–µ—Å–±–∏—è–Ω–∫–∞', '–º–æ–ª–æ–∫–æ', '–Ω–∏–Ω–∞', '–±–∞—Ç—è', '–ª–µ–≤–∞', '–≥–∞–ª—è', '—Ç—é–ª–µ–Ω—å', '–ª—è–ª—è', '–∑–¥—Ä–∞–≤—Å—Ç–≤–æ–≤–∞—Ç—å', '–º–∞–¥–∏–Ω–∞', '–Ω–µ—Ç', '–ø–µ—Ç—å–∫–∞',
        // '—á–∞—à–∫–∞', '–¥—Ä—É–≥–æ–π', '–≤–µ–ª–æ—Å–∏–ø–µ–¥', '–º—É—Å–æ—Ä', '–º—É—à–∫–∞', '–∫—Ä–∏–ø–µ—Ä', '—à–º–µ–ª—å', '–º—É—Ä–∑–∏–∫', '–Ω–æ–≤—ã–π', '–∫–∞—Ä–ª—Å–æ–Ω', '–∫–æ—Ä–æ–±–∫–∞', '–ø–∞–ø–æ—á–∫–∞', '—á—É–ø–∞–∫–∞–±–µ—Ä', '–∫–ª–µ—â', '–ø—É—à–∫–∞', '—á', '–Ω–µ', '—á–∏–∫', '—Å–ø–∞—Ç—å',
        // '–∫–∏—Ä–∞', '–º–∞–Ω—å—è–∫', '—Ç—Ä–∞–∫—Ç–æ—Ä–∏—Å—Ç', '–∫—Ç–æ', '–¥–∞—à–æ–∫', '–º—É–∫–∞', '–±–æ–ª—å—à–æ–π', '–≤–ª–∞–¥–∏–º–∏—Ä', '—É—Ç–µ–Ω–æ–∫', '–Ω–∞—Ö–æ–¥–∏—Ç—å', '–º–æ—à–∫–∞', '–∂–∞—Ä', '–∫–æ—Å–º–æ–Ω–∞–≤—Ç', '–∏–¥—Ç–∏', '–¥—é–π–º–æ–≤–æ—á–∫–∞', '–ø—Ä–µ–∑–µ—Ä–≤–∞—Ç–∏–≤', '—é—Ç—É–±–µ—Ä',
        // '–¥–∞–≤–∞—Ç—å', '–∑–∞–ø—É—Å–∫–∞—Ç—å', '–≤–∞–ª–µ—Ä–∞', '–≥–ª–µ–±', '—Å–∫–æ—Ç–∏–Ω–∞', '–æ–≥–æ', '–∫–æ—à–∫–∞', '–ª–µ–±–µ–¥—å', '–¥–∂–µ–∫–∏', '–ª–æ–∂–∫–∞', '–±–æ–ª—å—à–æ–π', '—Å–ø–∞–π–¥–µ—Ä–º–µ–Ω', '–ø–æ–¥–æ–∂–¥–∞—Ç—å', '–ø–∞—Ç—Ä–∏–∫', '–ª—é—Ü–∏—Ñ–µ—Ä', '—Å—É–ø–µ—Ä–≥–µ—Ä–æ–π', '–æ–Ω',
        // '–∂–¥–∞—Ç—å', '—Å—Ç—Ä–∞–Ω–∞', '–∫–Ω–∏–≥–∞', '–∑–∞–ø—É—Å–∫–∞—Ç—å', '–º—É–∑–º–æ', '7', '–∂—É—á–æ–∫', '—Ä', '–º–æ—Å–∫–≤–∞', '–≥–æ—Ä—à–æ–∫', '–Ω–∏–Ω–¥–∑—è', '—Å', '–¥–∞', '–ª—é—Å—è', '—Å—É–ø', '–º–∞—Ä–∏–Ω–µ—Ç–∞', '–ø—Å–∏–Ω–∞', '–ø–æ–∑–≤–∞—Ç—å', '—Ç—ã', '–ø–µ–Ω–∏—Å',
        // '—Ç–∏—Ä–∞–Ω–æ–∑–∞–≤—Ä', '–ø—á–µ–ª–∫–∞', '–ø–æ—á–∫–∞', '–º–∞—Ä—å—è–Ω–∞', '–ø–æ–∑—å', '–ø–æ–≤–∞—Ä', '—Å—ã—Ä', '–ª–µ–ø–∫–∞', '–¥–æ–º–æ–≤–æ–π', '–¥–µ–ø—É—Ç–∞—Ç', '—Å–∏–º–∫–∞', '—Ä—ã–∂–∏–∫', '–Ω–æ–∂–∫–∞', '–≤—Å–µ', '—Ä–µ–∫–∞', '–º—ã—à—å', '–≥–∞–Ω–¥–æ–Ω', '–∞–∏–¥–∞', '–∫–ª–æ–ø',
        // '—ç–∫—Å–∫–∞–≤–∞—Ç–æ—Ä', '–ª—å–≤–∏—Ü–∞', '–∑–≤–µ–∑–¥–∞', '–±–∞–±–∞', '–¥–µ–¥', '—Å—É–º–∫–∞', '—á–µ–±—É—Ä–µ–∫', '–∞–ª–∏—Å–∫–∞', '–∂–∞—Ä–µ–Ω—ã–π', '–ø–µ–Ω—Å–∏—è', '—à–∏–Ω—à–∏–ª–ª–∞', '–∫–Ω–∏–∂–∫–∞', '–Ω–µ', '–∫–∞–º–∞–∑', '—Å–æ—Ñ–∏—è', '—Å–ª–∞–≤–∞', '–ø—Ä–∏—à–µ–ª–µ—Ü', '—Ä–∞–¥—É–≥–∞',
        // '—á–µ—Ä–Ω—ã–π', '—Ñ–æ–∫—Å–∏', '–ø–æ–∫–µ–º–æ–Ω', '–ª–∏—Å–µ–Ω–æ–∫', '–ø–µ–ø–ø–∞', '—á—É—á–µ–ª–æ', '–≤–æ–ª–æ—Å', '—Å–º–µ—à–∞—Ä–∏–∫', '–≤–∞—Å—å–∫–∞', '—Å–Ω–µ–∂–æ–∫', '–Ω', '–≤–∞—Å–∏–ª–∏—Å–∞', '–∑–∞–ø—É—Å–∫–∞—Ç—å', '–º–∞—Å—è', '–º–æ—Ä—Å–∫–æ–π', '—Ç–∏–∫', '–∫–æ—Ç', '–±—É–ª—å–¥–æ–∑–µ—Ä',
        // '—Ç—Ä–∞–≤–∞', '–≤–Ω—É—á–æ–∫', '–µ—Ä–∂–∞–Ω', '—Å–ø–∞–Ω—á', '—Å–≤–µ—Ç–æ–∫', '—ç—Ä–≤–∏–Ω', '—Ñ–∏–∫—Å–∏–∫', '–¥–∏–º–∫–∞', '—Ñ–∏–ª–∏–Ω', '–≤–µ—Ä—Ç–æ–ª–µ—Ç', '–±–∞—Ä—Å—É–∫', '—Å–æ–ø–ª—è', '–ø–µ–Ω—å', '–æ–Ω', '–º—É–∑—ã—á–∫–∞', '–∞–ª–ª–∞', '—Ñ', '—Å–≤–æ–π', '–Ω—É–±–∏–∫–∞',
    ]) {
        expect(await tts(char)).toMatch(/<speaker audio/i);
    }
});

test('–ö–Ω–æ–ø–∫–∏ —Å —É–∂–µ –≤—ã–±—Ä–∞–Ω–Ω—ã–º–∏ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞–º–∏ –Ω–µ –¥–æ–ª–∂–Ω—ã –ø—Ä–∏—Ö–æ–¥–∏—Ç—å –ø–æ–≤—Ç–æ—Ä–Ω–æ', async () => {
    const shownButtons: { [button: string]: string } = {};

    // –ü–µ—Ä–≤—ã–π –≤—ã–∑–æ–≤ –∫–Ω–æ–ø–∫–∏ –Ω–µ –ø—Ä–∏—Ö–æ–¥—è—Ç
    expect((await closure.handleCommand('')).buttons).toEqual([]);

    await text('–°–∞—à–∫—É');
    let btns = (await closure.handleCommand('–ü–∞—à–∫—É')).buttons || [];
    expect(btns).toHaveLength(2);

    while (true) {
        const [first, second] = btns;

        expect(shownButtons).not.toHaveProperty(first.title);
        second && expect(shownButtons).not.toHaveProperty(second.title);

        shownButtons[first.title] = first.title;
        btns = (await closure.handleCommand(first.title)).buttons || [];

        if (first.title.match(/–º—ã—à–∫—É/i)) {
            break;
        }
    }
});

test('–í–º–µ—Å—Ç–µ —Å –Ω–µ–æ–¥—É—à–µ–≤–ª–µ–Ω–Ω—ã–º –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–º –≤—ã–≤–æ–¥–∏–º —Ç–æ–ª—å–∫–æ –¥–≤–µ –∫–Ω–æ–ø–∫–∏', async () => {
    await text('');
    await text('–∫–æ—Ç–∏–∫');

    const { buttons } = await closure.handleCommand('—Å—Ç—É–ª');

    expect(buttons).toHaveLength(2);
});

/**
 * –ß–∞—Å—Ç–æ –≤ —Å–∞–º–æ–º –Ω–∞—á–∞–ª–µ –∏–≥—Ä—ã –ª—é–¥–∏ –≤–º–µ—Å—Ç–æ —Ç–æ–≥–æ, —á—Ç–æ–±—ã –Ω–∞–∑–≤–∞—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–∂–∞,
 * –æ—Ç–≤–µ—á–∞—é—Ç –Ω–∞ –≤–æ–ø—Ä–æ—Å "–•–æ—Ç–∏—Ç–µ –ø–æ–∏–≥—Ä–∞—Ç—å‚Ä¶" –∏ –≥–æ–≤–æ—Ä—è—Ç "–î–∞"
 */
test('–ü—Ä–∏ —Ñ—Ä–∞–∑–µ ¬´–î–∞¬ª –ø–æ–≤—Ç–æ—Ä—è–µ—Ç –ø—Ä–∏–∑—ã–≤ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞', async () => {
    await text('');
    const answer = await text('', 'YANDEX.CONFIRM');

    expect(answer).not.toMatch(/–Ω–µ –ø–æ—Ö–æ–∂–µ/i);
    expect(answer).toMatch(/–∫–æ–≥–æ –ø–æ–∑–≤–∞–ª –¥–µ–¥–∫–∞/i);
});

test('–í—ã–≤–æ–¥–∏—Ç –ø–æ–º–æ—â—å –Ω–∞ —Ñ—Ä–∞–∑—ã ¬´–Ω–∏–∫–æ–≥–æ¬ª, ¬´–Ω–µ –∑–Ω–∞—é¬ª', async () => {
    await text('');

    expect(await text('–Ω–∏–∫–æ–≥–æ')).not.toMatch(/–Ω–µ –ø–æ—Ö–æ–∂–µ/i);
    expect(await text('–Ω–µ –∑–Ω–∞—é')).not.toMatch(/–Ω–µ –ø–æ—Ö–æ–∂–µ/i);

    expect(await text('–Ω–∏–∫–æ–≥–æ')).toMatch(/–º–æ–∂–µ—Ç–µ –ø–æ–∑–≤–∞—Ç—å –ª—é–±–æ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞/i);
    expect(await text('–Ω–µ –∑–Ω–∞—é')).toMatch(/–º–æ–∂–µ—Ç–µ –ø–æ–∑–≤–∞—Ç—å –ª—é–±–æ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞/i);
});

test('–ù–µ –ø–æ–≤—Ç–æ—Ä—è–µ—Ç –¥–≤–∞–∂–¥—ã –≤—Å—Ç—É–ø–∏—Ç–µ–ª—å–Ω—É—é —Ñ—Ä–∞–∑—É', async () => {
    await text('');

    expect(await text('–∫–æ—à–∫–∞')).toMatch(/–ø–æ–º–æ–≥—É –≤–∞–º/i);


    const answer = await text('–∫–æ—à–∫–∞');

    expect(answer).not.toMatch(/–ø–æ–º–æ–≥—É –≤–∞–º/i);
    expect(answer).toMatch(/–±—É–¥—É –ø–æ–º–æ–≥–∞—Ç—å/i);
});

test('–î–ª—è –∏–∑–≤–µ—Å—Ç–Ω—ã—Ö –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∫–∞—Ä—Ç–∏–Ω–∫–∏', async () => {
    await text('');

    const response = await closure.handleCommand('–∫–æ—à–∫–∞');

    expect(response?.card?.image_id).toBeDefined()
});

/**
 * –ò–Ω–∞—á–µ –≤–æ–∑–Ω–∏–∫–∞–µ—Ç –ø—Ä–æ–±–ª–µ–º–∞ —Å–∏–Ω—Ç–µ—Ä–∞ —Ä–µ—á–∏.
 */
test('–ü–æ—Å–ª–µ –∫–∞–∂–¥—ã—Ö —á–µ—Ç—ã—Ä—ë—Ö –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π –≤ tts –¥–æ–±–∞–≤–ª—è–µ—Ç—Å—è —Ç–æ—á–∫–∞ –≤–º–µ—Å—Ç–æ –∑–∞–ø—è—Ç–æ–π.', async () => {
    await text('');

    await text('–±–∞–±–∫–∞');
    await text('–≤–Ω—É—á–∫–∞');
    await text('–∫–æ—à–∫–∞');
    await text('–∑–∞–π–∫–∞');
    const endsWithDot  = await tts('–ø—Ç–∏—á–∫–∞');

    expect(endsWithDot).toMatch(/–≤–Ω—É—á–∫–∞ –∑–∞ –±–∞–±–∫—É\. /i);
});
